apiVersion: apps/v1
kind: Deployment
metadata:
  name: org-ms
  namespace: {{ namespace }}
  labels:
    app: org-ms
spec:
  replicas: {{ APPS.ORGANIZATION.REPLICA }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 50%
  selector:
    matchLabels:
      app: org-ms
  template:
    metadata:
      labels:
        app: org-ms
    spec:
      containers:
      - name: org-ms
        image: "{{ IMAGEPREFIX }}/{{ APPS.ORGANIZATION.IMAGE }}"
        imagePullPolicy: Always
        ports:
        - containerPort: {{ APPS.ORGANIZATION.CONTAINERPORT }}
        env:
        - name: app.profile
          value: {{ PROFILE }}
        - name: CCOMS_DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              name: ccoms
              key: database-user
        - name: CCOMS_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ccoms
              key: database-password
        - name: CCOMS_DATABASE_SERVICENAME
          valueFrom:
            secretKeyRef:
              name: ccoms
              key: database-servicename
        - name: CCOMS_DATABASE_PORT
          value: "{{ DB.MONGO.PORT }}"
        - name: CCOMS_EMP_PORT
          value: "{{ APPS.EMPLOYEE.CONTAINERPORT }}"
        - name: CCOMS_DEPT_PORT
          value: "{{ APPS.DEPARTMENT.CONTAINERPORT }}"
        - name: CCOMS_ORG_PORT
          value: "{{ APPS.ORGANIZATION.CONTAINERPORT }}"
        readinessProbe:
          httpGet:
            path: {{ APPS.ORGANIZATION.READYNESSPROBEHTTPPATH }}
            port: {{ APPS.ORGANIZATION.CONTAINERPORT }}
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: {{ APPS.ORGANIZATION.LIVENESSPROBEHTTPPATH }}
            port: {{ APPS.ORGANIZATION.CONTAINERPORT }}
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
